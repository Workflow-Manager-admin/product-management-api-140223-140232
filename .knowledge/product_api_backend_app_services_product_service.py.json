{"is_source_file": true, "format": "Python", "description": "This file defines a ProductService class that provides methods for managing product entities, including retrieving, creating, updating, and deleting products via database sessions and interactions with SQLAlchemy ORM.", "external_files": ["app.models.product", "app.database", "sqlalchemy.orm.exc"], "external_methods": ["session.query", "Product", "SessionLocal", "session.close", "session.add", "session.commit", "session.refresh", "session.delete"], "published": ["ProductService"], "classes": [{"name": "ProductService", "description": "Service layer for handling product business logic and interaction with the database."}], "methods": [{"name": "get_all_products()", "description": "Retrieves all products from the database.", "scope": "ProductService", "scopeKind": "class"}, {"name": "get_product_by_id(product_id)", "description": "Retrieves a product by its unique identifier.", "scope": "ProductService", "scopeKind": "class"}, {"name": "create_product(data)", "description": "Creates a new product record with provided data.", "scope": "ProductService", "scopeKind": "class"}, {"name": "update_product(product_id, data)", "description": "Updates an existing product identified by product_id with new data.", "scope": "ProductService", "scopeKind": "class"}, {"name": "delete_product(product_id)", "description": "Deletes a product from the database by its ID.", "scope": "ProductService", "scopeKind": "class"}], "calls": ["SessionLocal()", "session.query(Product).all()", "session.query(Product).filter_by(id=product_id).one_or_none()", "session.add(product)", "session.commit()", "session.refresh(product)", "session.delete(product)"], "search-terms": ["ProductService", "product business logic", "database interaction", "SQLAlchemy ORM", "CRUD operations"], "state": 2, "file_id": 10, "knowledge_revision": 22, "git_revision": "", "ctags": [{"_type": "tag", "name": "ProductService", "path": "/home/kavia/workspace/code-generation/product-management-api-140223-140232/product_api_backend/app/services/product_service.py", "pattern": "/^class ProductService:$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "create_product", "path": "/home/kavia/workspace/code-generation/product-management-api-140223-140232/product_api_backend/app/services/product_service.py", "pattern": "/^    def create_product(data):$/", "language": "Python", "kind": "member", "signature": "(data)", "scope": "ProductService", "scopeKind": "class"}, {"_type": "tag", "name": "delete_product", "path": "/home/kavia/workspace/code-generation/product-management-api-140223-140232/product_api_backend/app/services/product_service.py", "pattern": "/^    def delete_product(product_id):$/", "language": "Python", "kind": "member", "signature": "(product_id)", "scope": "ProductService", "scopeKind": "class"}, {"_type": "tag", "name": "get_all_products", "path": "/home/kavia/workspace/code-generation/product-management-api-140223-140232/product_api_backend/app/services/product_service.py", "pattern": "/^    def get_all_products():$/", "language": "Python", "kind": "member", "signature": "()", "scope": "ProductService", "scopeKind": "class"}, {"_type": "tag", "name": "get_product_by_id", "path": "/home/kavia/workspace/code-generation/product-management-api-140223-140232/product_api_backend/app/services/product_service.py", "pattern": "/^    def get_product_by_id(product_id):$/", "language": "Python", "kind": "member", "signature": "(product_id)", "scope": "ProductService", "scopeKind": "class"}, {"_type": "tag", "name": "update_product", "path": "/home/kavia/workspace/code-generation/product-management-api-140223-140232/product_api_backend/app/services/product_service.py", "pattern": "/^    def update_product(product_id, data):$/", "language": "Python", "kind": "member", "signature": "(product_id, data)", "scope": "ProductService", "scopeKind": "class"}], "hash": "803ea06026918bc41b0a6dab6fc6bf6b", "format-version": 4, "code-base-name": "product_api_backend", "filename": "product_api_backend/app/services/product_service.py", "revision_history": [{"22": ""}]}