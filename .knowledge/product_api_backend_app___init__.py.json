{"is_source_file": true, "format": "Python", "description": "This file is a Python source script that initializes a Flask web application, configures CORS, integrates API documentation via Flask-Smorest, connects to a database, and registers route blueprints for health checks and product management.", "external_files": ["app/database", "app/routes/health", "app/routes/product"], "external_methods": ["init_db"], "published": [], "classes": [], "methods": [{"name": "init_db", "description": "Initializes the database, creating tables if they do not exist."}], "calls": ["flask.Flask", "flask_cors.CORS", "app.database.init_db", "flask_smorest.Api", "api.register_blueprint"], "search-terms": ["Flask app initialization", "CORS configuration", "API blueprint registration", "OpenAPI configuration", "Database initialization"], "state": 2, "file_id": 6, "knowledge_revision": 24, "git_revision": "18dae6cdd8a5a6130e07d4e181e57385b1058da9", "revision_history": [{"12": "4285f9160d623cdd70ee4ec4d7a5eb986cdb8119"}, {"24": "18dae6cdd8a5a6130e07d4e181e57385b1058da9"}], "ctags": [{"_type": "tag", "name": "api", "path": "/home/kavia/workspace/code-generation/product-management-api-140223-140232/product_api_backend/app/__init__.py", "pattern": "/^api = Api(app)$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "app", "path": "/home/kavia/workspace/code-generation/product-management-api-140223-140232/product_api_backend/app/__init__.py", "pattern": "/^app = Flask(__name__)$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "health_blp", "path": "/home/kavia/workspace/code-generation/product-management-api-140223-140232/product_api_backend/app/__init__.py", "pattern": "/^from .routes.health import blp as health_blp$/", "language": "Python", "kind": "unknown", "nameref": "unknown:blp"}], "hash": "3781275771b43cd35cd2edd13f8e4421", "format-version": 4, "code-base-name": "product_api_backend", "filename": "product_api_backend/app/__init__.py", "fields": [{"name": "api = Api(app)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "app = Flask(__name__)", "scope": "", "scopeKind": "", "description": "unavailable"}]}